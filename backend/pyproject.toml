[project]
name = "app"
version = "0.1.0"
description = ""
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi[standard]<1.0.0,>=0.114.2",
    "alembic<2.0.0,>=1.12.1",
    "email-validator<3.0.0.0,>=2.1.0.post1",
    "passlib[bcrypt]<2.0.0,>=1.7.4",
    "psycopg[binary]<4.0.0,>=3.1.13",
    "pydantic-settings>=2.7.1",
    "pyjwt<3.0.0,>=2.8.0",
    "sqlmodel<1.0.0,>=0.0.21",
    "tenacity>=9.0.0",
    "fastapi-pagination>=0.12.34",
    "bcrypt==4.0.1",
    "google-genai>=1.5.0",
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.3.4",
    "ruff>=0.9.5",
    "pre-commit>=4.2.0",
    "pytest-cov>=6.1.1",
    "pytest-asyncio>=0.26.0",
]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
target-version = "py310"
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
